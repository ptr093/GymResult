{"ast":null,"code":"export class NumberValidators {\n  gte(control) {\n    const v = +control.value;\n    console.log(v);\n    if (isNaN(v)) {\n      return of({\n        'gte': true,\n        'requiredValue': 10\n      });\n    }\n    if (v <= 10) {\n      return of({\n        'gte': true,\n        'requiredValue': 10\n      });\n    }\n    return of(null);\n  }\n}","map":{"version":3,"mappings":"AAGA,OAAM,MAAOA,gBAAgB;EAYRC,GAAG,CAACC,OAAwB;IAG7C,MAAMC,CAAC,GAAQ,CAACD,OAAO,CAACE,KAAK;IAE7BC,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;IAEd,IAAII,KAAK,CAACJ,CAAC,CAAC,EAAE;MACZ,OAAOK,EAAE,CAAC;QAAE,KAAK,EAAE,IAAI;QAAE,eAAe,EAAE;MAAE,CAAE,CAAC;;IAGjD,IAAIL,CAAC,IAAI,EAAE,EAAE;MACX,OAAOK,EAAE,CAAC;QAAE,KAAK,EAAE,IAAI;QAAE,eAAe,EAAE;MAAE,CAAE,CAAC;;IAGjD,OAAOA,EAAE,CAAC,IAAI,CAAC;EAEnB","names":["NumberValidators","gte","control","v","value","console","log","isNaN","of"],"sourceRoot":"","sources":["D:\\repos\\GymResult\\GymAngular\\src\\app\\workout\\number-validator.ts"],"sourcesContent":["import { AbstractControl, AsyncValidatorFn, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport class NumberValidators {\r\n\r\n//   static range(min: number, max: number): AsyncValidatorFn {\r\n//     Observable<ValidationErrors> | null {\r\n//       if (c.value && (isNaN(c.value) || c.value < min || c.value > max)) {\r\n       \r\n//         return of({'range': true});\r\n//       }\r\n//       return null;\r\n//     };\r\n//   }\r\n\r\nstatic function: any gte(control: AbstractControl): \r\n         Observable<ValidationErrors> | null {\r\n \r\n    const v:number=+control.value;\r\n \r\n    console.log(v)\r\n    \r\n    if (isNaN(v)) {\r\n      return of({ 'gte': true, 'requiredValue': 10 })\r\n    }      \r\n \r\n    if (v <= 10) {\r\n      return of({ 'gte': true, 'requiredValue': 10 })\r\n    } \r\n \r\n    return of(null)\r\n \r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}