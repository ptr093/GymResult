{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Pipe } from '@angular/core';\nlet WorkoutDetailsComponent = class WorkoutDetailsComponent {\n  constructor(route, router, workoutService) {\n    this.route = route;\n    this.router = router;\n    this.workoutService = workoutService;\n    this.pageTitle = 'Product Detail';\n    this.errorMessage = '';\n    this.exercise = [];\n    this.exercisedGrouped = [];\n  }\n  ngOnInit() {\n    const param = this.route.snapshot.paramMap.get('id');\n    if (param) {\n      const id = +param;\n      this.getExercise(id);\n    }\n  }\n  getExercise(id) {\n    this.workoutService.getExercises(id).subscribe({\n      next: exercise => this.exercise = exercise,\n      error: err => this.errorMessage = err\n    });\n  }\n  transform(collection, property) {\n    // prevents the application from breaking if the array of objects doesn't exist yet\n    const groupedCollection = collection.reduce((previous, current) => {\n      if (!previous[current[property]]) {\n        previous[current[property]] = [current];\n      } else {\n        previous[current[property]].push(current);\n      }\n      return previous;\n    }, {});\n    // this will return an array of objects, each object containing a group of objects\n    return Object.keys(groupedCollection).map(key => ({\n      key,\n      value: groupedCollection[key]\n    }));\n  }\n  onBack() {\n    this.router.navigate(['/workouts']);\n  }\n};\nWorkoutDetailsComponent = __decorate([Component({\n  templateUrl: './workout-details.component.html',\n  styleUrls: ['./workout-details.component.css']\n}), Pipe({\n  name: 'groupBy'\n})], WorkoutDetailsComponent);\nexport { WorkoutDetailsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,IAAI,QAAuB,eAAe;AAcvD,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EASlCC,YAAoBC,KAAqB,EACrBC,MAAc,EACdC,cAA8B;IAF9B,UAAK,GAALF,KAAK;IACL,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;IARlC,cAAS,GAAG,gBAAgB;IAC5B,iBAAY,GAAG,EAAE;IACjB,aAAQ,GAAgB,EAAE;IAC1B,qBAAgB,GAAe,EAAE;EAMjC;EAEAC,QAAQ;IACN,MAAMC,KAAK,GAAG,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACpD,IAAIH,KAAK,EAAE;MACT,MAAMI,EAAE,GAAG,CAACJ,KAAK;MACjB,IAAI,CAACK,WAAW,CAACD,EAAE,CAAC;;EAIxB;EAEAC,WAAW,CAACD,EAAU;IACpB,IAAI,CAACN,cAAc,CAACQ,YAAY,CAACF,EAAE,CAAC,CAACG,SAAS,CAAC;MAC7CC,IAAI,EAAEC,QAAQ,IAAI,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MAC1CC,KAAK,EAAEC,GAAG,IAAI,IAAI,CAACC,YAAY,GAAGD;KACnC,CAAC;EACJ;EAEAE,SAAS,CAACC,UAAiB,EAAEC,QAAgB;IAC3C;IAGA,MAAMC,iBAAiB,GAAGF,UAAU,CAACG,MAAM,CAAC,CAACC,QAAQ,EAAEC,OAAO,KAAG;MAC7D,IAAG,CAACD,QAAQ,CAACC,OAAO,CAACJ,QAAQ,CAAC,CAAC,EAAE;QAC7BG,QAAQ,CAACC,OAAO,CAACJ,QAAQ,CAAC,CAAC,GAAG,CAACI,OAAO,CAAC;OAC1C,MAAM;QACHD,QAAQ,CAACC,OAAO,CAACJ,QAAQ,CAAC,CAAC,CAACK,IAAI,CAACD,OAAO,CAAC;;MAG7C,OAAOD,QAAQ;IACnB,CAAC,EAAE,EAAE,CAAC;IAEN;IACA,OAAOG,MAAM,CAACC,IAAI,CAACN,iBAAiB,CAAC,CAACO,GAAG,CAACC,GAAG,KAAK;MAAEA,GAAG;MAAEC,KAAK,EAAET,iBAAiB,CAACQ,GAAG;IAAC,CAAE,CAAC,CAAC;EAC5F;EAIAE,MAAM;IACJ,IAAI,CAAC7B,MAAM,CAAC8B,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;CAED;AAvDYjC,uBAAuB,eARnCF,SAAS,CAAC;EAEToC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,EACDpC,IAAI,CAAC;EACJqC,IAAI,EAAE;CACP,CAAC,GACWpC,uBAAuB,CAuDnC;SAvDYA,uBAAuB","names":["Component","Pipe","WorkoutDetailsComponent","constructor","route","router","workoutService","ngOnInit","param","snapshot","paramMap","get","id","getExercise","getExercises","subscribe","next","exercise","error","err","errorMessage","transform","collection","property","groupedCollection","reduce","previous","current","push","Object","keys","map","key","value","onBack","navigate","templateUrl","styleUrls","name"],"sourceRoot":"","sources":["D:\\repos\\GymResult\\GymAngular\\src\\app\\workout\\workout-details.component.ts"],"sourcesContent":["import { Component, Pipe, PipeTransform } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { from, Subscription } from 'rxjs';\nimport { WorkoutService } from '../workout.service';\nimport { Exerceise } from './exercise';\n\n@Component({\n\n  templateUrl: './workout-details.component.html',\n  styleUrls: ['./workout-details.component.css']\n})\n@Pipe({\n  name: 'groupBy'\n})\nexport class WorkoutDetailsComponent implements PipeTransform  {\n\n\n  pageTitle = 'Product Detail';\n  errorMessage = '';\n  exercise: Exerceise[] = []\n  exercisedGrouped: Exerceise[] =[]\n\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private workoutService: WorkoutService) {\n  }\n\n  ngOnInit(): void {\n    const param = this.route.snapshot.paramMap.get('id');\n    if (param) {\n      const id = +param;\n      this.getExercise(id);\n    }\n\n   \n  }\n\n  getExercise(id: number): void {\n    this.workoutService.getExercises(id).subscribe({\n      next: exercise => this.exercise = exercise,\n      error: err => this.errorMessage = err\n    });\n  }\n\n  transform(collection: any[], property: string): any[] {\n    // prevents the application from breaking if the array of objects doesn't exist yet\n    \n\n    const groupedCollection = collection.reduce((previous, current)=> {\n        if(!previous[current[property]]) {\n            previous[current[property]] = [current];\n        } else {\n            previous[current[property]].push(current);\n        }\n\n        return previous;\n    }, {});\n\n    // this will return an array of objects, each object containing a group of objects\n    return Object.keys(groupedCollection).map(key => ({ key, value: groupedCollection[key] }));\n  }\n\n  \n\n  onBack(): void {\n    this.router.navigate(['/workouts']);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}