{"ast":null,"code":"export class NumberValidators {}\nexport function gte(control) {\n  const v = +control.value;\n  console.log(v);\n  if (isNaN(v)) {\n    return of({\n      'gte': true,\n      'requiredValue': 10\n    });\n  }\n  if (v <= 10) {\n    return of({\n      'gte': true,\n      'requiredValue': 10\n    });\n  }\n  return of(null);\n}","map":{"version":3,"mappings":"AAGA,OAAM,MAAOA,gBAAgB;AAEzB,OAAM,SAAUC,GAAG,CAACC,OAAwB;EAGhD,MAAMC,CAAC,GAAQ,CAACD,OAAO,CAACE,KAAK;EAE7BC,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;EAEd,IAAII,KAAK,CAACJ,CAAC,CAAC,EAAE;IACb,OAAOK,EAAE,CAAC;MAAE,KAAK,EAAE,IAAI;MAAE,eAAe,EAAE;IAAE,CAAE,CAAC;;EAGhD,IAAIL,CAAC,IAAI,EAAE,EAAE;IACZ,OAAOK,EAAE,CAAC;MAAE,KAAK,EAAE,IAAI;MAAE,eAAe,EAAE;IAAE,CAAE,CAAC;;EAGhD,OAAOA,EAAE,CAAC,IAAI,CAAC;AAEf","names":["NumberValidators","gte","control","v","value","console","log","isNaN","of"],"sourceRoot":"","sources":["D:\\repos\\GymResult\\GymAngular\\src\\app\\workout\\number-validator.ts"],"sourcesContent":["import { AbstractControl, AsyncValidatorFn, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport class NumberValidators {\r\n\r\n    export function gte(control: AbstractControl): \r\n    Observable<ValidationErrors> | null {\r\n\r\nconst v:number=+control.value;\r\n\r\nconsole.log(v)\r\n\r\nif (isNaN(v)) {\r\n return of({ 'gte': true, 'requiredValue': 10 })\r\n}      \r\n\r\nif (v <= 10) {\r\n return of({ 'gte': true, 'requiredValue': 10 })\r\n} \r\n\r\nreturn of(null)\r\n\r\n}\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}