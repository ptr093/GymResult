{"ast":null,"code":"export class NumberValidators {\n  static range(min, max) {\n    Observable | null | null;\n    {\n      if (c.value && (isNaN(c.value) || c.value < min || c.value > max)) {\n        return of({\n          'range': true\n        });\n      }\n      return null;\n    }\n    ;\n  }\n}","map":{"version":3,"mappings":"AAEA,OAAM,MAAOA,gBAAgB;EAE3B,OAAOC,KAAK,CAACC,GAAW,EAAEC,GAAW;IACnCC,UAA4B,GAAG,IAAI,GAAG,IAAI;IAAI;MAC5C,IAAIC,CAAC,CAACC,KAAK,KAAKC,KAAK,CAACF,CAAC,CAACC,KAAK,CAAC,IAAID,CAAC,CAACC,KAAK,GAAGJ,GAAG,IAAIG,CAAC,CAACC,KAAK,GAAGH,GAAG,CAAC,EAAE;QAEjE,OAAOK,EAAE,CAAC;UAAC,OAAO,EAAE;QAAI,CAAC,CAAC;;MAE5B,OAAO,IAAI;;IACZ;EACH","names":["NumberValidators","range","min","max","Observable","c","value","isNaN","of"],"sourceRoot":"","sources":["D:\\repos\\GymResult\\GymAngular\\src\\app\\workout\\number-validator.ts"],"sourcesContent":["import { AbstractControl, AsyncValidatorFn, ValidatorFn } from '@angular/forms';\r\n\r\nexport class NumberValidators {\r\n\r\n  static range(min: number, max: number): AsyncValidatorFn {\r\n    Observable<ValidationErrors> | null | null => {\r\n      if (c.value && (isNaN(c.value) || c.value < min || c.value > max)) {\r\n       \r\n        return of({'range': true});\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}