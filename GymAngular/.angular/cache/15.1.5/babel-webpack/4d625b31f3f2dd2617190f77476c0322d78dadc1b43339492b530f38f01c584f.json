{"ast":null,"code":"export class NumberValidators {\n  static range(min, max) {\n    return c => {\n      if (c.value && (isNaN(c.value) || c.value < min || c.value > max)) {\n        return of({\n          'custom': true\n        });\n      }\n      return null;\n    };\n  }\n}","map":{"version":3,"mappings":"AAEA,OAAM,MAAOA,gBAAgB;EAE3B,OAAOC,KAAK,CAACC,GAAW,EAAEC,GAAW;IACnC,OAAQC,CAA2B,IAAuC;MACxE,IAAIA,CAAC,CAACC,KAAK,KAAKC,KAAK,CAACF,CAAC,CAACC,KAAK,CAAC,IAAID,CAAC,CAACC,KAAK,GAAGH,GAAG,IAAIE,CAAC,CAACC,KAAK,GAAGF,GAAG,CAAC,EAAE;QACjE,OAAOI,EAAE,CAAC;UAAC,QAAQ,EAAE;QAAI,CAAC,CAAC;;MAE7B,OAAO,IAAI;IACb,CAAC;EACH","names":["NumberValidators","range","min","max","c","value","isNaN","of"],"sourceRoot":"","sources":["D:\\repos\\GymResult\\GymAngular\\src\\app\\workout\\number-validator.ts"],"sourcesContent":["import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport class NumberValidators {\r\n\r\n  static range(min: number, max: number): ValidatorFn {\r\n    return (c: AbstractControl<any,any>): { [key: string]: boolean } | null => {\r\n      if (c.value && (isNaN(c.value) || c.value < min || c.value > max)) {\r\n        return of({'custom': true});\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}