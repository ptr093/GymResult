// <auto-generated />
using System;
using GymResult.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymResult.Migrations
{
    [DbContext(typeof(TrainingInfoContext))]
    partial class TrainingInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("GymResult.Entities.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Reps")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Series")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrainingId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Klatka",
                            Reps = 0,
                            Series = 1,
                            TrainingId = 1,
                            Weight = 95.5
                        },
                        new
                        {
                            Id = 2,
                            Category = "Klatka",
                            Reps = 0,
                            Series = 2,
                            TrainingId = 1,
                            Weight = 95.5
                        },
                        new
                        {
                            Id = 3,
                            Category = "Klatka",
                            Reps = 0,
                            Series = 3,
                            TrainingId = 1,
                            Weight = 95.5
                        },
                        new
                        {
                            Id = 4,
                            Category = "Klatka",
                            Reps = 0,
                            Series = 1,
                            TrainingId = 2,
                            Weight = 95.5
                        },
                        new
                        {
                            Id = 5,
                            Category = "Klatka",
                            Reps = 0,
                            Series = 2,
                            TrainingId = 2,
                            Weight = 95.5
                        },
                        new
                        {
                            Id = 6,
                            Category = "Klatka",
                            Reps = 0,
                            Series = 1,
                            TrainingId = 3,
                            Weight = 95.5
                        });
                });

            modelBuilder.Entity("GymResult.Entities.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Trainings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 2, 16, 10, 32, 17, 728, DateTimeKind.Local).AddTicks(1791),
                            Description = "Pozytywny",
                            Location = "Kraków"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 2, 16, 10, 32, 17, 728, DateTimeKind.Local).AddTicks(1795),
                            Description = "Pozytywny",
                            Location = "Kraków"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 2, 16, 10, 32, 17, 728, DateTimeKind.Local).AddTicks(1797),
                            Description = "Lekki ból",
                            Location = "Sandomierz"
                        });
                });

            modelBuilder.Entity("GymResult.Entities.Exercise", b =>
                {
                    b.HasOne("GymResult.Entities.Training", "Training")
                        .WithMany("Exercies")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Training");
                });

            modelBuilder.Entity("GymResult.Entities.Training", b =>
                {
                    b.Navigation("Exercies");
                });
#pragma warning restore 612, 618
        }
    }
}
